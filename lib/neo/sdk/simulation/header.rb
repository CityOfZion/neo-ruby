# frozen_string_literal: true

module Neo
  module SDK
    class Simulation
      # A class meant for mocking and stubbing in your tests
      class Header
        class << self
          # Get consensus data for this block (pseudo-random number generated by consensus node)
          def get_consensus_data(*params); raise('Stub or mock required.') end

          # Get the hash of the block
          def get_hash(*params); raise('Stub or mock required.') end

          # Get the current block height
          def get_index(*params); raise('Stub or mock required.') end

          # Get the Merkle Tree root for all transactions in that block
          def get_merkle_root(*params); raise('Stub or mock required.') end

          # Get the hash value for the next bookkeeper contract
          def get_next_consensus(*params); raise('Stub or mock required.') end

          # Get the hash of the previous block
          def get_prev_hash(*params); raise('Stub or mock required.') end

          # Get the timestamp of the block
          def get_timestamp(*params); raise('Stub or mock required.') end

          # Get Block version number
          def get_version(*params); raise('Stub or mock required.') end
        end
      end
    end
  end
end
